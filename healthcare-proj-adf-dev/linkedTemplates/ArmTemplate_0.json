{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "healthcare-proj-adf-dev"
		},
		"AzureDatabricksDeltaLake1_ls_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricksDeltaLake1_ls'"
		},
		"tt_hc_kv_ls_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-healthcare-proj.vault.azure.net/"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://healthcareadlsstroage.dfs.core.windows.net/"
		},
		"hosa_sql_ls_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "mission100adeaniketsever.database.windows.net"
		},
		"hosa_sql_ls_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "@{linkedService().db_name}"
		},
		"hosa_sql_ls_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "azurerAniketDataAdmin"
		},
		"tt_hc_adb_ls_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0403-042552-4d6jdeyu"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksDeltaLake1_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-1513610024249885.5.azuredatabricks.net",
					"clusterId": "0403-042552-4d6jdeyu",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricksDeltaLake1_ls_accessToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tt_hc_kv_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('tt_hc_kv_ls_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksDeltaLakeDataset1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDatabricksDeltaLake1_ls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema_name": {
						"type": "string"
					},
					"table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"database": {
						"value": "@dataset().schema_name",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricksDeltaLake1_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "tt_hc_kv_ls",
							"type": "LinkedServiceReference"
						},
						"secretName": "access-key-ttadlsdevnew"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/tt_hc_kv_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/hosa_sql_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"db_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('hosa_sql_ls_properties_typeProperties_server')]",
					"database": "[parameters('hosa_sql_ls_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('hosa_sql_ls_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "tt_hc_kv_ls",
							"type": "LinkedServiceReference"
						},
						"secretName": "azure-sql-db-password"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/tt_hc_kv_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tt_hc_adb_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-1513610024249885.5.azuredatabricks.net",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "tt_hc_kv_ls",
							"type": "LinkedServiceReference"
						},
						"secretName": "db-hc-adb-ws-at"
					},
					"existingClusterId": "[parameters('tt_hc_adb_ls_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/tt_hc_kv_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_silver_to_gold')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "slv_transaction",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/aniket.304lan@gmail.com/Silver/Transactions"
						},
						"linkedServiceName": {
							"referenceName": "tt_hc_adb_ls",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "gold_transactions",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "slv_transaction",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/aniket.304lan@gmail.com/Gold/fact_transaction"
						},
						"linkedServiceName": {
							"referenceName": "tt_hc_adb_ls",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "slv_patients",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/aniket.304lan@gmail.com/Silver/Patients"
						},
						"linkedServiceName": {
							"referenceName": "tt_hc_adb_ls",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "gld_patients",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "slv_patients",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/aniket.304lan@gmail.com/Gold/dim_patient"
						},
						"linkedServiceName": {
							"referenceName": "tt_hc_adb_ls",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "slv_npi",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/aniket.304lan@gmail.com/Silver/NPI"
						},
						"linkedServiceName": {
							"referenceName": "tt_hc_adb_ls",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "gld_npi",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "slv_npi",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/aniket.304lan@gmail.com/Gold/dim_npi"
						},
						"linkedServiceName": {
							"referenceName": "tt_hc_adb_ls",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "slv_icd_codes",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/aniket.304lan@gmail.com/Silver/ICD Code"
						},
						"linkedServiceName": {
							"referenceName": "tt_hc_adb_ls",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "gld_icd_codes",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "slv_icd_codes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/aniket.304lan@gmail.com/Gold/dim_icd_code"
						},
						"linkedServiceName": {
							"referenceName": "tt_hc_adb_ls",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "slv_providers",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/aniket.304lan@gmail.com/Silver/Providers_F"
						},
						"linkedServiceName": {
							"referenceName": "tt_hc_adb_ls",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "gld_providers",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "slv_providers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/aniket.304lan@gmail.com/Gold/dim_provider"
						},
						"linkedServiceName": {
							"referenceName": "tt_hc_adb_ls",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "slv_cpt_codes",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/aniket.304lan@gmail.com/Silver/CPT Codes"
						},
						"linkedServiceName": {
							"referenceName": "tt_hc_adb_ls",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "gld_cpt_codes",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "slv_cpt_codes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/aniket.304lan@gmail.com/Gold/dim_cpt_code"
						},
						"linkedServiceName": {
							"referenceName": "tt_hc_adb_ls",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "slv_claims",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/aniket.304lan@gmail.com/Silver/Claims"
						},
						"linkedServiceName": {
							"referenceName": "tt_hc_adb_ls",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "slv_encounters",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/aniket.304lan@gmail.com/Silver/Encounters"
						},
						"linkedServiceName": {
							"referenceName": "tt_hc_adb_ls",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-03-31T15:50:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/tt_hc_adb_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/generic_adls_flat_file_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"file_path": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().file_path",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/generic_adls_parquet_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"file_path": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().file_path",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/generic_sql_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "hosa_sql_ls",
					"type": "LinkedServiceReference",
					"parameters": {
						"db_name": {
							"value": "@dataset().db_name",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"schema_name": {
						"type": "string"
					},
					"table_name": {
						"type": "string"
					},
					"db_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema_name",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/hosa_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_from_emr')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition2",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.Load_Type,'Full')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Fetch_logs",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDatabricksDeltaLakeSource",
											"query": {
												"value": "@concat('select coalesce(cast(max(loaddate) as date),''','1900-01-01',''') as last_fetched_date from audit.load_logs where',' data_source=''',pipeline().parameters.datasource,''' and tablename=''',pipeline().parameters.tablename,'''')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "AzureDatabricksDeltaLakeDataset1",
											"type": "DatasetReference",
											"parameters": {
												"schema_name": "'aa'",
												"table_name": "'aa'"
											}
										}
									}
								},
								{
									"name": "Incremental_Load_CP",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Fetch_logs",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select *,''',pipeline().parameters.datasource,''' as datasource from ',pipeline().parameters.tablename,' where ',pipeline().parameters.watermark,' >=''',activity('Fetch_logs').output.firstRow.last_fetched_date,'''')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "generic_sql_ds",
											"type": "DatasetReference",
											"parameters": {
												"schema_name": {
													"value": "@split(pipeline().parameters.tablename,'.')[0]",
													"type": "Expression"
												},
												"table_name": {
													"value": "@split(pipeline().parameters.tablename,'.')[1]",
													"type": "Expression"
												},
												"db_name": {
													"value": "@pipeline().parameters.database",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "generic_adls_parquet_ds",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"file_path": {
													"value": "@pipeline().parameters.targetpath",
													"type": "Expression"
												},
												"file_name": {
													"value": "@split(pipeline().parameters.tablename,'.')[1]",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Insert_Logs_Inc_Load",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Incremental_Load_CP",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDatabricksDeltaLakeSource",
											"query": {
												"value": "@concat('insert into audit.load_logs(data_source,tablename,numberofrowscopied,watermarkcolumnname,loaddate) values (''',pipeline().parameters.datasource,''', ''',pipeline().parameters.tablename,''',''',activity('Incremental_Load_CP').output.rowscopied,''',''',pipeline().parameters.watermark,''',''',utcNow(),''')')\n",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "AzureDatabricksDeltaLakeDataset1",
											"type": "DatasetReference",
											"parameters": {
												"schema_name": "'aa'",
												"table_name": "'aa'"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Full_Load_CP",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select *,''',pipeline().parameters.datasource,''' as datasource from ', pipeline().parameters.tablename)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "generic_sql_ds",
											"type": "DatasetReference",
											"parameters": {
												"schema_name": {
													"value": "@split(pipeline().parameters.tablename, '.')[0]",
													"type": "Expression"
												},
												"table_name": {
													"value": "@split(pipeline().parameters.tablename, '.')[1]",
													"type": "Expression"
												},
												"db_name": {
													"value": "@pipeline().parameters.database",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "generic_adls_parquet_ds",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"file_path": {
													"value": "@pipeline().parameters.targetpath",
													"type": "Expression"
												},
												"file_name": {
													"value": "@split(pipeline().parameters.tablename,'.')[1]",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Insert _Logs_Full_Load",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Full_Load_CP",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDatabricksDeltaLakeSource",
											"query": {
												"value": "@concat('insert into audit.load_logs(data_source, tablename,numberofrowscopied,watermarkcolumnname,loaddate) values (''',pipeline().parameters.datasource,''',''',pipeline().parameters.tablename,''',''',activity('Full_Load_CP').output.rowscopied,''',''',pipeline().parameters.watermark,''',''',utcNow(),''')')\n\n",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "AzureDatabricksDeltaLakeDataset1",
											"type": "DatasetReference",
											"parameters": {
												"schema_name": "'aa'",
												"table_name": "'aa'"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Load_Type": {
						"type": "string"
					},
					"database": {
						"type": "string"
					},
					"tablename": {
						"type": "string"
					},
					"datasource": {
						"type": "string"
					},
					"targetpath": {
						"type": "string"
					},
					"watermark": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-03-29T14:14:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureDatabricksDeltaLakeDataset1')]",
				"[concat(variables('factoryId'), '/datasets/generic_sql_ds')]",
				"[concat(variables('factoryId'), '/datasets/generic_adls_parquet_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_emr_src_to_landing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lkp_EMR_Configs",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "generic_adls_flat_file_ds",
								"type": "DatasetReference",
								"parameters": {
									"container": "configs",
									"file_path": "emr",
									"file_name": "load_config.csv"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lkp_EMR_Configs",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lkp_EMR_Configs').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 5,
							"activities": [
								{
									"name": "File_Exists",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "generic_adls_parquet_ds",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"file_path": {
													"value": "@item().targetpath",
													"type": "Expression"
												},
												"file_name": {
													"value": "@split(item().tablename,'.' )[1]",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "ParquetReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "File_Exists",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('File_Exists').output.exists\n",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Archive File",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ParquetSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "ParquetReadSettings"
														}
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "generic_adls_parquet_ds",
														"type": "DatasetReference",
														"parameters": {
															"container": "bronze",
															"file_path": {
																"value": "@item().targetpath",
																"type": "Expression"
															},
															"file_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "generic_adls_parquet_ds",
														"type": "DatasetReference",
														"parameters": {
															"container": "bronze",
															"file_path": {
																"value": "@concat(item().targetpath,'/archive/',formatDateTime(utcNow(),'yyyy'),'/', formatDateTime(utcNow(),'MM'),'/', formatDateTime(utcNow(),'dd'))",
																"type": "Expression"
															},
															"file_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "If Condition2",
									"type": "IfCondition",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [
										{
											"activity": "If Condition1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().loadtype,'Full')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Fetch_logs",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureDatabricksDeltaLakeSource",
														"query": {
															"value": "@concat('select coalesce(cast(max(loaddate) as date),''','1900-01-01',''') as last_fetched_date from audit.load_logs where',' data_source=''',item().datasource,''' and tablename=''',item().tablename,'''')",
															"type": "Expression"
														}
													},
													"dataset": {
														"referenceName": "AzureDatabricksDeltaLakeDataset1",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": "'aa'",
															"table_name": "'aa'"
														}
													}
												}
											},
											{
												"name": "Incremental_Load_CP",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Fetch_logs",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "@concat('select *,''',item().datasource,''' as datasource from ',item().tablename,' where ',item().watermark,' >= ''',activity('Fetch_logs').output.firstRow.last_fetched_date,'''')",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "generic_sql_ds",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": {
																"value": "@split(item().tablename,'.')[0]",
																"type": "Expression"
															},
															"table_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															},
															"db_name": {
																"value": "@item().database",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "generic_adls_parquet_ds",
														"type": "DatasetReference",
														"parameters": {
															"container": "bronze",
															"file_path": {
																"value": "@item().targetpath",
																"type": "Expression"
															},
															"file_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Insert_Logs_Inc_Load",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "Incremental_Load_CP",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureDatabricksDeltaLakeSource",
														"query": {
															"value": "@concat('insert into audit.load_logs(data_source,tablename,numberofrowscopied,watermarkcolumnname,loaddate) values (''',item().datasource,''', ''',item().tablename,''',''',activity('Incremental_Load_CP').output.rowscopied,''',''',item().watermark,''',''',utcNow(),''')')\n",
															"type": "Expression"
														}
													},
													"dataset": {
														"referenceName": "AzureDatabricksDeltaLakeDataset1",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": "'aa'",
															"table_name": "'aa'"
														}
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Full_Load_CP",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "@concat('select *,''',item().datasource,''' as datasource from ', item().tablename)",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "generic_sql_ds",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": {
																"value": "@split(item().tablename,'.')[0]",
																"type": "Expression"
															},
															"table_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															},
															"db_name": {
																"value": "@item().database",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "generic_adls_parquet_ds",
														"type": "DatasetReference",
														"parameters": {
															"container": "bronze",
															"file_path": {
																"value": "@item().targetpath",
																"type": "Expression"
															},
															"file_name": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Insert _Logs_Full_Load",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "Full_Load_CP",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureDatabricksDeltaLakeSource",
														"query": {
															"value": "@concat('insert into audit.load_logs(data_source, tablename,numberofrowscopied,watermarkcolumnname,loaddate) values (''',item().datasource,''',''',item().tablename,''',''',activity('Full_Load_CP').output.rowscopied,''',''',item().watermark,''',''',utcNow(),''')')\n\n",
															"type": "Expression"
														}
													},
													"dataset": {
														"referenceName": "AzureDatabricksDeltaLakeDataset1",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": "'aa'",
															"table_name": "'aa'"
														}
													}
												}
											}
										]
									}
								},
								{
									"name": "If Condition3",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "If Condition2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().is_active,'1')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Execute Pipeline1",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"policy": {
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "pl_copy_from_emr",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"Load_Type": {
															"value": "@item().loadtype",
															"type": "Expression"
														},
														"database": {
															"value": "@item().database",
															"type": "Expression"
														},
														"tablename": {
															"value": "@item().tablename",
															"type": "Expression"
														},
														"datasource": {
															"value": "@item().datasource",
															"type": "Expression"
														},
														"targetpath": {
															"value": "@item().targetpath",
															"type": "Expression"
														},
														"watermark": {
															"value": "@item().watermark",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-03-31T15:26:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/generic_adls_flat_file_ds')]",
				"[concat(variables('factoryId'), '/datasets/generic_adls_parquet_ds')]",
				"[concat(variables('factoryId'), '/datasets/AzureDatabricksDeltaLakeDataset1')]",
				"[concat(variables('factoryId'), '/datasets/generic_sql_ds')]",
				"[concat(variables('factoryId'), '/pipelines/pl_copy_from_emr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_end_to_end_hc')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "exec_pl_emr_src_to_landing",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_emr_src_to_landing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "exec_pl_silver_to_gold",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "exec_pl_emr_src_to_landing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_silver_to_gold",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-03-31T16:21:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_emr_src_to_landing')]",
				"[concat(variables('factoryId'), '/pipelines/pl_silver_to_gold')]"
			]
		}
	]
}